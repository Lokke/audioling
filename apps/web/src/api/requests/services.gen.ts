// This file is auto-generated by @hey-api/openapi-ts

import type { CancelablePromise } from './core/CancelablePromise';
import { OpenAPI } from './core/OpenAPI';
import { request as __request } from './core/request';
import type { GetPingResponse, PostAuthSignInData, PostAuthSignInResponse, PostAuthSignOutData, PostAuthSignOutResponse, GetApiUsersResponse, PostApiUsersData, PostApiUsersResponse, GetApiUsersByIdResponse, DeleteApiUsersByIdResponse, PutApiUsersByIdData, PutApiUsersByIdResponse, GetApiLibrariesResponse, PostApiLibrariesData, PostApiLibrariesResponse, GetApiLibrariesByIdResponse, PutApiLibrariesByIdData, PutApiLibrariesByIdResponse, DeleteApiLibrariesByIdResponse, GetApiJobsResponse, PostApiJobsResponse, DeleteApiJobsByIdData, DeleteApiJobsByIdResponse, GetApiAlbumsData, GetApiAlbumsResponse, GetApiAlbumsByIdData, GetApiAlbumsByIdResponse } from './types.gen';

export class RootService {
    /**
     * @returns unknown Ping the server
     * @throws ApiError
     */
    public static getPing(): CancelablePromise<GetPingResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/ping'
        });
    }
    
}

export class AuthService {
    /**
     * @param data The data for the request.
     * @param data.requestBody
     * @returns unknown Sign in to a audioling server
     * @throws ApiError
     */
    public static postAuthSignIn(data: PostAuthSignInData = {}): CancelablePromise<PostAuthSignInResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/auth/sign-in',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.requestBody
     * @returns unknown Sign in to a audioling server
     * @throws ApiError
     */
    public static postAuthSignOut(data: PostAuthSignOutData = {}): CancelablePromise<PostAuthSignOutResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/auth/sign-out',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
}

export class UsersService {
    /**
     * @returns unknown Get users
     * @throws ApiError
     */
    public static getApiUsers(): CancelablePromise<GetApiUsersResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/users'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.requestBody
     * @returns unknown Create user
     * @throws ApiError
     */
    public static postApiUsers(data: PostApiUsersData = {}): CancelablePromise<PostApiUsersResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/users',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * @returns unknown Get user
     * @throws ApiError
     */
    public static getApiUsersById(): CancelablePromise<GetApiUsersByIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/users/{id}'
        });
    }
    
    /**
     * @returns unknown Delete user
     * @throws ApiError
     */
    public static deleteApiUsersById(): CancelablePromise<DeleteApiUsersByIdResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/api/users/{id}'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.requestBody
     * @returns unknown Update user
     * @throws ApiError
     */
    public static putApiUsersById(data: PutApiUsersByIdData = {}): CancelablePromise<PutApiUsersByIdResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/api/users/{id}',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
}

export class LibrariesService {
    /**
     * Get libraries
     * @returns unknown Get libraries
     * @throws ApiError
     */
    public static getApiLibraries(): CancelablePromise<GetApiLibrariesResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/libraries'
        });
    }
    
    /**
     * Create a library
     * @param data The data for the request.
     * @param data.requestBody
     * @returns unknown Create a library
     * @throws ApiError
     */
    public static postApiLibraries(data: PostApiLibrariesData = {}): CancelablePromise<PostApiLibrariesResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/libraries',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Get a library
     * @returns unknown Get a library
     * @throws ApiError
     */
    public static getApiLibrariesById(): CancelablePromise<GetApiLibrariesByIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/libraries/{id}'
        });
    }
    
    /**
     * Update a library
     * @param data The data for the request.
     * @param data.requestBody
     * @returns unknown Update a library
     * @throws ApiError
     */
    public static putApiLibrariesById(data: PutApiLibrariesByIdData = {}): CancelablePromise<PutApiLibrariesByIdResponse> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/api/libraries/{id}',
            body: data.requestBody,
            mediaType: 'application/json'
        });
    }
    
    /**
     * Delete a library
     * @returns unknown Delete a library
     * @throws ApiError
     */
    public static deleteApiLibrariesById(): CancelablePromise<DeleteApiLibrariesByIdResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/api/libraries/{id}'
        });
    }
    
}

export class JobsService {
    /**
     * @returns unknown Get jobs
     * @throws ApiError
     */
    public static getApiJobs(): CancelablePromise<GetApiJobsResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/jobs'
        });
    }
    
    /**
     * @returns unknown Create a job
     * @throws ApiError
     */
    public static postApiJobs(): CancelablePromise<PostApiJobsResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/jobs'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.id
     * @returns unknown Delete a job
     * @throws ApiError
     */
    public static deleteApiJobsById(data: DeleteApiJobsByIdData): CancelablePromise<DeleteApiJobsByIdResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/api/jobs/{id}',
            path: {
                id: data.id
            }
        });
    }
    
}

export class AlbumsService {
    /**
     * @param data The data for the request.
     * @param data.limit
     * @param data.offset
     * @param data.libraryId
     * @param data.orderBy
     * @returns unknown Get albums
     * @throws ApiError
     */
    public static getApiAlbums(data: GetApiAlbumsData): CancelablePromise<GetApiAlbumsResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/albums',
            query: {
                libraryId: data.libraryId,
                orderBy: data.orderBy,
                limit: data.limit,
                offset: data.offset
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.id
     * @returns unknown Get album
     * @throws ApiError
     */
    public static getApiAlbumsById(data: GetApiAlbumsByIdData): CancelablePromise<GetApiAlbumsByIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/albums/{id}',
            path: {
                id: data.id
            }
        });
    }
    
}