// This file is auto-generated by @hey-api/openapi-ts

export type GetPingResponse = {
    name: string;
    status: string;
    version: string;
};

export type PostAuthSignInData = {
    requestBody?: {
        password: string;
        username: string;
    };
};

export type PostAuthSignInResponse = {
    data: {
        createdAt: string;
        displayName: string | null;
        id: string;
        isAdmin: boolean;
        isEnabled: boolean;
        updatedAt: string;
        username: string;
        refreshToken: string;
        token: string;
    };
    links: {
        self: string;
    };
};

export type PostAuthSignOutData = {
    requestBody?: {
        refreshToken?: string;
    };
};

export type PostAuthSignOutResponse = unknown;

export type GetApiUsersResponse = {
    data: Array<{
        createdAt: string;
        displayName: string | null;
        id: string;
        isAdmin: boolean;
        isEnabled: boolean;
        updatedAt: string;
        username: string;
    }>;
    links: {
        next: string;
        prev: string;
        self: string;
    };
};

export type PostApiUsersData = {
    requestBody?: {
        displayName?: string;
        password: string;
        username: string;
    };
};

export type PostApiUsersResponse = {
    data: {
        createdAt: string;
        displayName: string | null;
        id: string;
        isAdmin: boolean;
        isEnabled: boolean;
        updatedAt: string;
        username: string;
    };
    links: {
        self: string;
    };
};

export type GetApiUsersByIdResponse = {
    data: {
        createdAt: string;
        displayName: string | null;
        id: string;
        isAdmin: boolean;
        isEnabled: boolean;
        updatedAt: string;
        username: string;
    };
    links: {
        self: string;
    };
};

export type DeleteApiUsersByIdResponse = unknown;

export type PutApiUsersByIdData = {
    requestBody?: {
        displayName?: string;
        password: string;
        username: string;
    };
};

export type PutApiUsersByIdResponse = {
    data: {
        createdAt: string;
        displayName: string | null;
        id: string;
        isAdmin: boolean;
        isEnabled: boolean;
        updatedAt: string;
        username: string;
    };
    links: {
        self: string;
    };
};

export type GetApiLibrariesResponse = {
    data: Array<{
        createdAt: string;
        id: string;
        name: string;
        scanUrl: string;
        scanUsername: string;
        type: string;
        updatedAt: string;
    }>;
    links: {
        next: string;
        prev: string;
        self: string;
    };
};

export type PostApiLibrariesData = {
    requestBody?: {
        name: string;
        password: string;
        type: string;
        url: string;
        username: string;
    };
};

export type PostApiLibrariesResponse = {
    data: {
        createdAt: string;
        id: string;
        name: string;
        scanUrl: string;
        scanUsername: string;
        type: string;
        updatedAt: string;
    };
    links: {
        self: string;
    };
};

export type GetApiLibrariesByIdResponse = {
    data: {
        createdAt: string;
        id: string;
        name: string;
        scanUrl: string;
        scanUsername: string;
        type: string;
        updatedAt: string;
    };
    links: {
        self: string;
    };
};

export type PutApiLibrariesByIdData = {
    requestBody?: {
        name: string;
        password: string;
        type: string;
        url: string;
        username: string;
    };
};

export type PutApiLibrariesByIdResponse = {
    data: {
        createdAt: string;
        id: string;
        name: string;
        scanUrl: string;
        scanUsername: string;
        type: string;
        updatedAt: string;
    };
    links: {
        self: string;
    };
};

export type DeleteApiLibrariesByIdResponse = unknown;

export type GetApiJobsResponse = {
    data: Array<{
        createdAt: string;
        id: string;
        libraryId: string;
        message: string | null;
        status: string;
        type: string;
        updatedAt: string;
    }>;
    links: {
        next: string;
        prev: string;
        self: string;
    };
};

export type PostApiJobsResponse = {
    data: {
        createdAt: string;
        id: string;
        libraryId: string;
        message: string | null;
        status: string;
        type: string;
        updatedAt: string;
    };
    links: {
        self: string;
    };
};

export type DeleteApiJobsByIdData = {
    id: string;
};

export type DeleteApiJobsByIdResponse = unknown;

export type GetApiAlbumsData = {
    libraryId?: Array<(string)>;
    limit: string;
    offset: string;
    orderBy?: Array<(string)>;
};

export type GetApiAlbumsResponse = {
    data: Array<{
        albumArtists: Array<{
            id: string;
            isDeleted: boolean;
            name: string;
            remoteId: string;
        }>;
        createdAt: string;
        description: string | null;
        genres: Array<{
            id: string;
            name: string;
        }>;
        id: string;
        isCompilation: boolean;
        isDeleted: boolean;
        lastPlayedAt: string | null;
        libraryId: string;
        name: string;
        playCount: number;
        releaseDate: string;
        releaseYear: number;
        remoteCreatedAt: string;
        remoteId: string;
        sortName: string;
        updatedAt: string;
        userFavorite: boolean;
        userPlayCount: number;
        userRating: number | null;
    }>;
    links: {
        next: string;
        prev: string;
        self: string;
    };
};

export type GetApiAlbumsByIdData = {
    id: string;
};

export type GetApiAlbumsByIdResponse = {
    data: {
        albumArtists: Array<{
            id: string;
            isDeleted: boolean;
            name: string;
            remoteId: string;
        }>;
        createdAt: string;
        description: string | null;
        genres: Array<{
            id: string;
            name: string;
        }>;
        id: string;
        isCompilation: boolean;
        isDeleted: boolean;
        lastPlayedAt: string | null;
        libraryId: string;
        name: string;
        playCount: number;
        releaseDate: string;
        releaseYear: number;
        remoteCreatedAt: string;
        remoteId: string;
        sortName: string;
        updatedAt: string;
        userFavorite: boolean;
        userPlayCount: number;
        userRating: number | null;
    };
    links: {
        self: string;
    };
};

export type $OpenApiTs = {
    '/ping': {
        get: {
            res: {
                /**
                 * Ping the server
                 */
                200: {
                    name: string;
                    status: string;
                    version: string;
                };
            };
        };
    };
    '/auth/sign-in': {
        post: {
            req: PostAuthSignInData;
            res: {
                /**
                 * Sign in to a audioling server
                 */
                200: {
                    data: {
                        createdAt: string;
                        displayName: string | null;
                        id: string;
                        isAdmin: boolean;
                        isEnabled: boolean;
                        updatedAt: string;
                        username: string;
                        refreshToken: string;
                        token: string;
                    };
                    links: {
                        self: string;
                    };
                };
            };
        };
    };
    '/auth/sign-out': {
        post: {
            req: PostAuthSignOutData;
            res: {
                /**
                 * Sign in to a audioling server
                 */
                200: unknown;
            };
        };
    };
    '/api/users': {
        get: {
            res: {
                /**
                 * Get users
                 */
                200: {
                    data: Array<{
                        createdAt: string;
                        displayName: string | null;
                        id: string;
                        isAdmin: boolean;
                        isEnabled: boolean;
                        updatedAt: string;
                        username: string;
                    }>;
                    links: {
                        next: string;
                        prev: string;
                        self: string;
                    };
                };
            };
        };
        post: {
            req: PostApiUsersData;
            res: {
                /**
                 * Create user
                 */
                201: {
                    data: {
                        createdAt: string;
                        displayName: string | null;
                        id: string;
                        isAdmin: boolean;
                        isEnabled: boolean;
                        updatedAt: string;
                        username: string;
                    };
                    links: {
                        self: string;
                    };
                };
            };
        };
    };
    '/api/users/{id}': {
        get: {
            res: {
                /**
                 * Get user
                 */
                200: {
                    data: {
                        createdAt: string;
                        displayName: string | null;
                        id: string;
                        isAdmin: boolean;
                        isEnabled: boolean;
                        updatedAt: string;
                        username: string;
                    };
                    links: {
                        self: string;
                    };
                };
            };
        };
        delete: {
            res: {
                /**
                 * Delete user
                 */
                204: unknown;
            };
        };
        put: {
            req: PutApiUsersByIdData;
            res: {
                /**
                 * Update user
                 */
                200: {
                    data: {
                        createdAt: string;
                        displayName: string | null;
                        id: string;
                        isAdmin: boolean;
                        isEnabled: boolean;
                        updatedAt: string;
                        username: string;
                    };
                    links: {
                        self: string;
                    };
                };
            };
        };
    };
    '/api/libraries': {
        get: {
            res: {
                /**
                 * Get libraries
                 */
                201: {
                    data: Array<{
                        createdAt: string;
                        id: string;
                        name: string;
                        scanUrl: string;
                        scanUsername: string;
                        type: string;
                        updatedAt: string;
                    }>;
                    links: {
                        next: string;
                        prev: string;
                        self: string;
                    };
                };
            };
        };
        post: {
            req: PostApiLibrariesData;
            res: {
                /**
                 * Create a library
                 */
                201: {
                    data: {
                        createdAt: string;
                        id: string;
                        name: string;
                        scanUrl: string;
                        scanUsername: string;
                        type: string;
                        updatedAt: string;
                    };
                    links: {
                        self: string;
                    };
                };
            };
        };
    };
    '/api/libraries/{id}': {
        get: {
            res: {
                /**
                 * Get a library
                 */
                200: {
                    data: {
                        createdAt: string;
                        id: string;
                        name: string;
                        scanUrl: string;
                        scanUsername: string;
                        type: string;
                        updatedAt: string;
                    };
                    links: {
                        self: string;
                    };
                };
            };
        };
        put: {
            req: PutApiLibrariesByIdData;
            res: {
                /**
                 * Update a library
                 */
                200: {
                    data: {
                        createdAt: string;
                        id: string;
                        name: string;
                        scanUrl: string;
                        scanUsername: string;
                        type: string;
                        updatedAt: string;
                    };
                    links: {
                        self: string;
                    };
                };
            };
        };
        delete: {
            res: {
                /**
                 * Delete a library
                 */
                204: unknown;
            };
        };
    };
    '/api/jobs': {
        get: {
            res: {
                /**
                 * Get jobs
                 */
                200: {
                    data: Array<{
                        createdAt: string;
                        id: string;
                        libraryId: string;
                        message: string | null;
                        status: string;
                        type: string;
                        updatedAt: string;
                    }>;
                    links: {
                        next: string;
                        prev: string;
                        self: string;
                    };
                };
            };
        };
        post: {
            res: {
                /**
                 * Create a job
                 */
                201: {
                    data: {
                        createdAt: string;
                        id: string;
                        libraryId: string;
                        message: string | null;
                        status: string;
                        type: string;
                        updatedAt: string;
                    };
                    links: {
                        self: string;
                    };
                };
            };
        };
    };
    '/api/jobs/{id}': {
        delete: {
            req: DeleteApiJobsByIdData;
            res: {
                /**
                 * Delete a job
                 */
                200: unknown;
            };
        };
    };
    '/api/albums': {
        get: {
            req: GetApiAlbumsData;
            res: {
                /**
                 * Get albums
                 */
                200: {
                    data: Array<{
                        albumArtists: Array<{
                            id: string;
                            isDeleted: boolean;
                            name: string;
                            remoteId: string;
                        }>;
                        createdAt: string;
                        description: string | null;
                        genres: Array<{
                            id: string;
                            name: string;
                        }>;
                        id: string;
                        isCompilation: boolean;
                        isDeleted: boolean;
                        lastPlayedAt: string | null;
                        libraryId: string;
                        name: string;
                        playCount: number;
                        releaseDate: string;
                        releaseYear: number;
                        remoteCreatedAt: string;
                        remoteId: string;
                        sortName: string;
                        updatedAt: string;
                        userFavorite: boolean;
                        userPlayCount: number;
                        userRating: number | null;
                    }>;
                    links: {
                        next: string;
                        prev: string;
                        self: string;
                    };
                };
            };
        };
    };
    '/api/albums/{id}': {
        get: {
            req: GetApiAlbumsByIdData;
            res: {
                /**
                 * Get album
                 */
                200: {
                    data: {
                        albumArtists: Array<{
                            id: string;
                            isDeleted: boolean;
                            name: string;
                            remoteId: string;
                        }>;
                        createdAt: string;
                        description: string | null;
                        genres: Array<{
                            id: string;
                            name: string;
                        }>;
                        id: string;
                        isCompilation: boolean;
                        isDeleted: boolean;
                        lastPlayedAt: string | null;
                        libraryId: string;
                        name: string;
                        playCount: number;
                        releaseDate: string;
                        releaseYear: number;
                        remoteCreatedAt: string;
                        remoteId: string;
                        sortName: string;
                        updatedAt: string;
                        userFavorite: boolean;
                        userPlayCount: number;
                        userRating: number | null;
                    };
                    links: {
                        self: string;
                    };
                };
            };
        };
    };
};