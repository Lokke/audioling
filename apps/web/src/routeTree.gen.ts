/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthenticationImport } from './routes/authentication'
import { Route as IndexImport } from './routes/index'
import { Route as AppDefaultImport } from './routes/app/_default'
import { Route as AppNowPlayingIndexImport } from './routes/app/now-playing/index'
import { Route as AppDefaultIndexImport } from './routes/app/_default..index'

// Create Virtual Routes

const AppImport = createFileRoute('/app')()

// Create/Update Routes

const AppRoute = AppImport.update({
  path: '/app',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticationRoute = AuthenticationImport.update({
  path: '/authentication',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AppDefaultRoute = AppDefaultImport.update({
  id: '/_default',
  getParentRoute: () => AppRoute,
} as any)

const AppNowPlayingIndexRoute = AppNowPlayingIndexImport.update({
  path: '/now-playing/',
  getParentRoute: () => AppRoute,
} as any)

const AppDefaultIndexRoute = AppDefaultIndexImport.update({
  path: '/',
  getParentRoute: () => AppDefaultRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/authentication': {
      id: '/authentication'
      path: '/authentication'
      fullPath: '/authentication'
      preLoaderRoute: typeof AuthenticationImport
      parentRoute: typeof rootRoute
    }
    '/app': {
      id: '/app'
      path: '/app'
      fullPath: '/app'
      preLoaderRoute: typeof AppImport
      parentRoute: typeof rootRoute
    }
    '/app/_default': {
      id: '/app/_default'
      path: '/app'
      fullPath: '/app'
      preLoaderRoute: typeof AppDefaultImport
      parentRoute: typeof AppRoute
    }
    '/app/_default/': {
      id: '/app/_default/'
      path: '/'
      fullPath: '/app/'
      preLoaderRoute: typeof AppDefaultIndexImport
      parentRoute: typeof AppDefaultImport
    }
    '/app/now-playing/': {
      id: '/app/now-playing/'
      path: '/now-playing'
      fullPath: '/app/now-playing'
      preLoaderRoute: typeof AppNowPlayingIndexImport
      parentRoute: typeof AppImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  AuthenticationRoute,
  AppRoute: AppRoute.addChildren({
    AppDefaultRoute: AppDefaultRoute.addChildren({ AppDefaultIndexRoute }),
    AppNowPlayingIndexRoute,
  }),
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/authentication",
        "/app"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/authentication": {
      "filePath": "authentication.tsx"
    },
    "/app": {
      "filePath": "app",
      "children": [
        "/app/_default",
        "/app/now-playing/"
      ]
    },
    "/app/_default": {
      "filePath": "app/_default.tsx",
      "parent": "/app",
      "children": [
        "/app/_default/"
      ]
    },
    "/app/_default/": {
      "filePath": "app/_default..index.tsx",
      "parent": "/app/_default"
    },
    "/app/now-playing/": {
      "filePath": "app/now-playing/index.tsx",
      "parent": "/app"
    }
  }
}
ROUTE_MANIFEST_END */
